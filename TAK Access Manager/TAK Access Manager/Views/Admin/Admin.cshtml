@using TAK_Access_Manager.Models.ViewModels
@model AdminViewModel
@{
	ViewData["Title"] = "Admin Page";
}
<script src="~/js/admin.js"></script>
<style>
	#adminPanesTbl1 td {
		background: lightgrey;
		border-radius: 10px;
	}

	#adminPanesTbl2 td {
		background: grey;
		border-radius: 10px;
	}

	.floatedTable {
		float: left;
	}

	body {
		margin: 0;
		padding: 20px;
		height: 100%;
	}

	.display-4 {
		font-family: 'Lucida Console';
		font-weight: bold;
		color: white;
	}

	.table {
		width: 100%;
		border-collapse: collapse;
	}

	.table td, .table th {
		padding: 12px 15px;
		border-bottom-width: 0px;
		text-align: center;
		font-size: 16px;
	}

	.table th {
		background-color: darkslategrey;
		color: white;
	}

	.table tbody tr:nth-child(even) {
		background-color: lightgray;
		border-top: 1px solid black;
		border-bottom: 1px solid black;
	}

	.table tbody tr:nth-child(odd) {
		background-color: white;
	}

	:root {
		--sl-color-primary-50: #0b5ed7;
		--sl-color-primary-100: #0b5ed7;
		--sl-color-primary-200: #0b5ed7;
		--sl-color-primary-300: #0b5ed7;
		--sl-color-primary-400: #0b5ed7;
		--sl-color-primary-500: #0b5ed7;
		--sl-color-primary-600: #0b5ed7;
		--sl-color-primary-700: #0b5ed7;
		--sl-color-primary-800: #0b5ed7;
		--sl-color-primary-900: #0b5ed7;
		--sl-color-primary-950: #0b5ed7;
		--sl-font-serif: 'Lucida Console';
		--sl-font-sans: 'Lucida Console';
		--sl-font-mono: 'Lucida Console';
		--sl-border-radius-small: 0rem;
		--sl-border-radius-medium: 0rem;
		--sl-border-radius-large: 0rem;
		--sl-border-radius-x-large: 0rem;
		--sl-border-radius-circle: 0rem;
		--sl-border-radius-pill: 0rem;
	}

	sl-tab-group {
		--indicator-color: #0b5ed7;
		--track-width: 4px;
		--sl-font-size-small: 1.5rem;
	}

	.stdbadge::part(base) {
		border: solid 1px darkslategrey;
		background: darkslategrey;
		border-radius: 0px;
	}

	sl-tree {
		--indent-guide-color: red;
		background: white;
	}
</style>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<body>

	<div class="modal fade" id="newConfigModal" role="dialog">
		<div class="modal-dialog modal-lg modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="tableDropModalTitle">Enter the parameters for your server connection.</h5>
					<button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<div class="input-group mb-3">
						<span class="input-group-text">Certificate Name</span>
						<input type="text" id="certNameInput" class="form-control" />
					</div>
					<div class="input-group mb-3">
						<span class="input-group-text">Group</span>
						<select class="form-select" id="groupSelectList">
							@foreach (var group in Model.groupList)
							{
								<option value="@group.GroupId">@group.GroupName</option>
							}
						</select>
					</div>
					<div class="input-group mb-3">
						<span class="input-group-text">Generated By</span>
						<input type="text" id="genByInput" class="form-control" disabled placeholder="@Model.user.UserName" />
					</div>
					<div class="input-group mb-3">
						<span class="input-group-text">Notes</span>
						<input type="text" id="notesInput" class="form-control" />
					</div>
					<div class="input-group mb-3">
						<span class="input-group-text">Server</span>
						<select type="text" id="serverInput" class="form-select">
							<option>Sandbox</option>
							<option>Production</option>
							<option>Training</option>
							<option>Federation</option>
						</select>
					</div>
				</div>
				<div class="modal-footer">
					<button id="newConfigSave" type="button" class="btn btn-primary" data-dismiss="modal" onclick="postConfig();">Save changes</button>
				</div>
			</div>
		</div>
	</div>

	@if (User.IsInRole("TAKAM-ADMINS-ROLE"))
	{
		<div class="modal fade" id="revokeConfigModal" role="dialog">
			<div class="modal-dialog modal-lg modal-dialog-centered">
				<div class="modal-content">
					<div class="modal-header">
						<h4 class="modal-title" id="revokeModalTitle"><i class="fa-sharp fa-solid fa-file-slash"></i> Revoke Connectivity for a Certificate</h4>
						<button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<form class="revoke-validation-required">
							<sl-input id="slselectRevokeCert" filled readonly>

							</sl-input>
							<br />
							<sl-alert variant="warning" open>
								<sl-icon slot="icon" name="exclamation-triangle"></sl-icon>
								<strong>This file will be revoked by all CSSA TAK Servers</strong><br />
								Revoked connection packages do not allow connection to any CSSA TAK Servers. This file will no longer be downloadable in TAKAM and will be processed automatically by the TAK Server(s) within minutes. <strong>Any users with this connection package loaded in any TAK client will be immediately disconnected from the TAK server.</strong>
							</sl-alert>
							<br />
							<sl-tooltip placement="right-start">
								<div slot="content">Selecting this will prevent this user from being able to <strong>download or create connection packages.</strong> </div>

								<sl-switch id="slswitchDisableAccnt" checked>Disable User Account</sl-switch>
							</sl-tooltip>
							<br />
							<br />
							<sl-input id="slselectDisableAccnt" filled readonly>

							</sl-input>
							<br />
							<br />
							<sl-checkbox value="accept" required>Accept terms and conditions above</sl-checkbox>
							<br />
							<br />
							<sl-input id="slRevokeInputCurrUser" placeholder="@Model.user.UserName" label="Revoked by:" filled readonly>@Model.user.UserName</sl-input>
							<br /><br />
							<sl-button id=slBtnRevoke type="submit" variant="warning">Revoke Certificate</sl-button>
							<br />
						</form>
					</div>
				</div>
			</div>
		</div>
	}

	<div class="text-center">
		<h1 class="display-4"><i class="fa-solid fa-sharp fa-users-rays"></i> ADMIN DASHBOARD: SAN DIEGO SHERIFF</h1>
	</div>

	<sl-tab-group placement="top" class="custom-tabgr" style="padding-bottom: 10px;">
		<sl-tab slot="nav" panel="general">GENERAL</sl-tab>

		<sl-tab-panel name="general">
			<sl-badge class="stdbadge" variant="neutral">Users: @Model.userList.Count</sl-badge>
			<sl-badge class="stdbadge" variant="neutral">Files: @Model.fileList.Count</sl-badge>
			<sl-badge class="stdbadge" variant="neutral">Date Created: @Model.agency.CreateDt</sl-badge>
		</sl-tab-panel>
		<sl-tab-panel name="actions" style="padding-top: auto;">
		</sl-tab-panel>
		<sl-tab-panel name="disabled">This is a disabled tab panel.</sl-tab-panel>
	</sl-tab-group>

	<sl-tree id="adminTree" class="tree-with-lines">

		<sl-icon name="chevron-double-down" slot="expand-icon" style="color: dodgerblue;"></sl-icon>
		<sl-icon name="chevron-double-left" slot="collapse-icon" style="color: dodgerblue;"></sl-icon>
		<sl-tree-item expanded>
			Agency: @Model.agency.AgencyDesc
			@foreach (var g in Model.groupList)
			{
				<sl-tree-item expanded>
					<i class="fa-sharp fa-solid fa-users-rays"> </i> @g.GroupName
					@foreach (var user in Model.userList.Where(x => x.PrimaryGroup == g.GroupId))
					{
						<sl-tree-item>
							<i class="fa-sharp fa-solid fa-user mr-2"></i> @user.UserName
							@if (!user.Active)
							{
								<a class="nav-link text-dark">
									<sl-badge variant="danger">Deactivated</sl-badge>
								</a>
							}
							@if (Model.fileList != null)
							{
								@foreach (var file in Model.fileList.Where(x => x.UserId == user.UserId))
								{
									<sl-tree-item>
										<table align=center>
											<colgroup>
												<col span="1" style="width: 15%;">
												<col span="1" style="width: 70%;">
											</colgroup>
											<tr>
												<td width="20px">
													<i class="fa-sharp fa-regular fa-file"> </i> @file.PackageName
												</td>
												<td>
													@if (file.StatusCid == 2)
													{
														<a class="nav-link text-dark open-revoke" data-bs-toggle="modal" data-account="@user.UserName" data-id="@file.PackageName" data-bs-target="#revokeConfigModal">
															<sl-button variant="warning" size="small" title="Revoke">
																Revoke <i class="fa-sharp fa-solid fa-ban"></i>
															</sl-button>
														</a>
													}
													else if (file.StatusCid == 3)
													{
														<a class="nav-link text-dark">
															<sl-badge variant="danger">Revoked</sl-badge>
														</a>
													}
													else
													{
														<a class="nav-link text-dark">
															<sl-badge variant="success">Processing<sl-spinner></sl-spinner></sl-badge>
														</a>
													}
												</td>
											</tr>
										</table>

									</sl-tree-item>
								}
							}
						</sl-tree-item>
					}
				</sl-tree-item>
			}
		</sl-tree-item>
	</sl-tree>

</body>
<script type="module">
	$(document).on("click", ".open-revoke", function () {
		var fileToRevoke = $(this).data('id');
		var accntToRevoke = $(this).data('account');

		let file = document.getElementById("slselectRevokeCert");
		file.value = fileToRevoke;

		let accnt = document.getElementById("slselectDisableAccnt");
		accnt.value = accntToRevoke;
	});

	const formRevoke = document.querySelector('.revoke-validation-required');
	formRevoke.addEventListener('submit', event => {
		event.preventDefault();
		revokeConfig();
	});
</script>
